from pydantic import BaseModel, Field, EmailStr
from typing import List, Literal, Tuple, TypedDict
from datetime import datetime

# model knjiga i izdavaca
class Izdavac(BaseModel):
    naziv: str
    adresa: str

class Knjiga(BaseModel):
    naslov: str
    ime_autora: str
    prezime_autora: str
    godina_izdavanja: int = Field(default_factory=lambda: datetime.now().year)
    broj_stranica: int
    izdavac: Izdavac

# mdodel administarora
class Admin(BaseModel):
    ime: str
    prezime: str
    korisnicko_ime: str
    email: EmailStr
    ovlasti: List[Literal["dodavanje", "brisanje", "ažuriranje", "čitanje"]] = []

# model za restraint
class StolInfo(TypedDict):
    broj: int
    lokacija: str

class Jelo(BaseModel):
    id: int
    naziv: str
    cijena: float

class RestaurantOrder(BaseModel):
    id: int
    ime_kupca: str
    stol_info: StolInfo
    jela: List[Jelo]
    ukupna_cijena: float

# model za CCTV_frame
class CCTVFrame(BaseModel):
    id: int
    vrijeme_snimanja: datetime
    koordinate: Tuple[float, float] = (0.0, 0.0)
